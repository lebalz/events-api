name: Node CI

on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - run: yarn install
    - run: yarn build
  unit-testing:
    needs: build
    steps:
    - run: yarn cov:unit
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      with:
        directory: ./coverage.unit/
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  integration-testing:
    needs: build
     services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: events_api_test
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
    - name: Run integration tests
      run: yarn test:db:create && yarn test:integration
      env:
        DATABASE_URL: "postgres://postgres:postgres@localhost:5432/events_api_test"
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      with:
        directory: ./coverage.integration/
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
